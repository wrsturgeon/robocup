#!/bin/bash

# Exit on first error
set -eu

syntaxerr() { echo "Syntax: ${0} <nao|release|debug|test> modules to enable ..."; exit 1; }

if [ ${#} -lt 1 ]
then
  syntaxerr
fi

# Run code checker
./scripts/code-checker.sh



#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Collecting data on OS & intended build

# Read command-line argument for build type
DEBUG=0
TEST=0
NAO=0
case "${1}" in
  release)
    ;; # for now
  debug)
    DEBUG=1
    ;;
  test)
    DEBUG=1
    TEST=1
    ;;
  nao)
    NAO=1
    ;;
  *)
    syntaxerr
    ;;
esac

# Detect operating system
case "$(uname -s)" in
  Darwin)
    OS=mac
    NOSTATIC='YES'
    set +e
    xcode-select --install 2>/dev/null
    set -e
    ;;
  Linux)
    OS=linux
    NOSTATIC=''
    sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    sudo apt-get update -y
    sudo apt-get dist-upgrade -y gcc-10 g++-10 libstdc++-10-dev
    ;;
  *)
    echo "Unsupported OS"
    exit 1
    ;;
esac

# Detect architecture
BITS=$(getconf LONG_BIT)
if [ "${OS}" = 'mac' ]
then
  CORES=$(sysctl -n hw.ncpu)
else
  CORES=$(nproc --all)
fi



#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Ensuring we have everything we need

# Download updated submodules (Eigen, etc.)
git submodule update --init --recursive

# Download NaoQI SDK if not already present
if [ ! -d ./naoqi-sdk ]
then
  # V5 SDKS ARE ALL HERE, THEY'RE JUST SO OLD THERE ARE NO LINKS TO THIS PAGE ANYWHERE <3
  # https://www.softbankrobotics.com/emea/en/support/nao-6/downloads-softwares/former-versions

  # Download
  wget -q -O naoqi-sdk.tar.gz "https://community-static.aldebaran.com/resources/2.1.4.13/sdk-c%2B%2B/naoqi-sdk-2.1.4.13-${OS}${BITS}.tar.gz"
  
  # Unpack
  # This is going to make Git go berserk
  tar -xzf naoqi-sdk.tar.gz
  
  # Delete the original compressed file
  rm naoqi-sdk.tar.gz
  
  # Remove the horrific filename extension
  # The resulting folder (naoqi-sdk) is .gitignore'd
  find . -type d -maxdepth 1 -iname 'naoqi-sdk*' -print -quit | xargs -I{} mv {} ./naoqi-sdk
fi

if [ "${DEBUG}" -eq 1 ]
then
  # Download SDL2 if not already present
  sdl2-config --version > /dev/null || (\
    git clone https://github.com/libsdl-org/SDL && \
    cd ./SDL && \
    mkdir build && cd build && \
    ../configure && \
    make -j${CORES} && \
    sudo make install && \
    cd .. && sudo rm -r ./SDL)
fi



#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Now begin the compilation process

MACROS="-D_BITS=${BITS} -D_DEBUG=${DEBUG}"
INCLUDES="-I./src -include ./src/options.hpp -include ./src/specifiers.hpp -isystem ./eigen -isystem ./naoqi_driver/include $(sdl2-config --cflags --libs | sed 's|-I|-isystem |g')"
FLAGS="-std=c++20 -Wall -Wextra -Werror"

# Enable selected modules
for arg in "${@:2}"; do
  MACROS="${MACROS} -D_$(echo ${arg} | tr '[:lower:]' '[:upper:]')_ENABLED=1"
done

if [ "${DEBUG}" -eq 1 ]
then
  FLAGS="${FLAGS} -g -O0"
  INCLUDES="${INCLUDES}"
  MACROS="${MACROS} -DEIGEN_INITIALIZE_MATRICES_BY_NAN"
else
  FLAGS="${FLAGS} -Ofast -march=native -funit-at-a-time -fomit-frame-pointer"
  if [ -z "${NOSTATIC}" ]
  then
    FLAGS="${FLAGS} -static"
  fi
fi

# Enable every module if we're testing
if [ "${TEST}" -eq 1 ]
then
  for dir in ./src/*/
  do
    DIRNAME=$(echo ${dir::${#dir}-1} | rev | cut -d/ -f1 | rev | tr '[:lower:]' '[:upper:]')
    FLAGS="${FLAGS} -D_${DIRNAME}_ENABLED=1"
  done
fi

ALL_FLAGS="${FLAGS} ${MACROS} ${INCLUDES}"

if [ "${TEST}" -eq 1 ]
then
  find ./src -type f -name '*.*pp' | xargs -I{} clang++ -c -std=c++20 -o ./tmp_compiled {} ${ALL_FLAGS} -Wno-unused-command-line-argument # Unused linker okay
	rm -f ./tmp_compiled
fi

clang++ -o run ./src/main.cpp ${ALL_FLAGS}
